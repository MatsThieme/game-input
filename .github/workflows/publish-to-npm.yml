name: Publish to npm

on:
    workflow_dispatch:
        inputs:
            version:
                description: "New release version"
                required: true
                type: string
            tag:
                description: "Associated npm release tag"
                required: false
                type: string
                default: latest
            release_type:
                description: "Is dev release?"
                required: true
                type: choice
                options:
                    - dev
                    - prod
                default: "dev"

env:
    computed_version: ${{ inputs.version }}${{ inputs.release_type == 'dev' &&  '-dev' || '' }}
    computed_tag: ${{ inputs.tag }}${{ inputs.release_type == 'dev' &&  '-dev' || '' }}

jobs:
    check-version:
        runs-on: ubuntu-latest
        name: Ensure release version availability
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/ensure-release-availability
              with:
                  version: $computed_version
    test:
        runs-on: ubuntu-latest
        name: Test, Lint, Typecheck
        needs: check-version
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
            - run: yarn --immutable --immutable-cache
            - run: yarn build
            - run: yarn test
            - run: yarn lint
            - run: yarn typecheck
    set-version:
        runs-on: ubuntu-latest
        name: Create release branch
        needs: test
        steps:
            - uses: actions/checkout@v3
            - run: yarn --immutable --immutable-cache
            - run: yarn set-version $computed_version
            - run: |
                  git config --global user.name 'workflow'
                  git config --global user.email ''
                  git commit -am "ci(release): release version \"$computed_version\""
                  git checkout -b release/$computed_version
                  git push --set-upstream origin release/$computed_version
    publish:
        runs-on: ubuntu-latest
        name: Publish to npm
        needs: set-version
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: release/${{ env.computed_version }}
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  registry-url: "https://registry.npmjs.org"
            - run: yarn --immutable --immutable-cache --check-cache
            - run: yarn publish-to-npm --tag $computed_tag
              env:
                  NPM_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
    merge-to-main:
        runs-on: ubuntu-latest
        if: inputs.release_type == 'prod'
        name: Merge release branch to main
        needs: publish
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - run: |
                  git checkout main
                  git merge --ff-only origin/release/$computed_version
                  git push
